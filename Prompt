ou are a cloud infrastructure visualization expert.

I will provide you with Mermaid diagram code that represents my real Azure infrastructure, where:

Every line denotes an actual connection or dependency (e.g., VM → NIC, NIC → Subnet, Subnet → NSG)

Each node represents a real resource, such as a VM, NIC, NSG, VNet, subnet, firewall, etc.

Your task is to generate a clean, professional Azure network topology diagram, modeled after the style used in Microsoft's Azure Architecture Center. The diagram must:

✅ Enclose all resources within a subscription boundary box
✅ Group resources by their actual Azure resource group (not by type)
✅ Clearly show peerings between VNets, if present
✅ Nest each subnet inside the appropriate VNet, and VNets inside their RG
✅ Preserve all directional resource-to-resource relationships from the Mermaid code
✅ Show VM ↔ NIC ↔ Subnet ↔ VNet relationships
✅ Show NSGs, public IPs, load balancers, firewalls, and private endpoints as they are connected
✅ Use clean spacing, icons (if supported), and clear labels for each resource

⚠️ Do not group resources by type (e.g., do not group all Key Vaults or Storage accounts together unless they are explicitly connected). The goal is to honor the original connectivity as per the Mermaid code.

Please ensure the visual hierarchy and layout follow these priorities:

Left-to-right or top-down flow

Minimal line crossing

Use subgraphs to indicate RGs or VNets without altering resource relationships

Here is the Mermaid code:

```mermaid
graph TD
  Ubuntutest --> ubuntutest338
  sumanvmiis --> nic-1
  testdc --> testdc13
  ubuntutest338 --> Ubuntutest-vnet_subnet_default
  nic-1 --> suman-vnet6_subnet_suman-subnet
  testdc13 --> yuktatest-vnet_subnet_default
  ubuntutest338 --> Ubuntutest-nsg
  nic-1 --> suman-nsg
  testdc13 --> testdc-nsg
  ubuntutest338 --> RR_LB-publicip
  testdc13 --> testdc-ip
  Storage --> tfstateabhaystgg
  Storage --> anuragterraformremobcknd
  Storage --> janaiacbackend
  Storage --> backendstorageaccount10
  Storage --> roopeshtfstate
  Storage --> sumandevops
  Storage --> yukbackuptest
  KeyVault --> jana-pocapp-kv
  KeyVault --> sumankv1
  KeyVault --> sendgridtestyuk
  KeyVault --> yuktest
  Automation --> YuktaAutoTest
```
